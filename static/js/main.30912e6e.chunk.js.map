{"version":3,"sources":["app/components/Timer.js","app/components/Footer.js","app/components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["alarm","Audio","Timer","useState","isActive","setIsActive","isPaused","setIsPaused","timer","setTimer","endTime","setEndTime","countRef","useRef","setTimerStartValue","timeValue","formatTime","getSeconds","slice","minutes","Math","floor","handleReset","clearInterval","current","className","onClick","e","disabled","timestamp","now","Date","finishTime","finishHour","getHours","finishMinutes","getMinutes","displayEndTime","breakValue","setInterval","play","console","log","Footer","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"4TAGMA,EAAQ,IAAIC,MAAM,wBAwITC,EApID,WAAO,IAAD,EAEcC,oBAAS,GAFvB,mBAEXC,EAFW,KAEDC,EAFC,OAIcF,oBAAS,GAJvB,mBAIXG,EAJW,KAIDC,EAJC,OAKQJ,mBAAS,GALjB,mBAKXK,EALW,KAKJC,EALI,OAMYN,mBAAS,IANrB,mBAMXO,EANW,KAMFC,EANE,KAOZC,EAAWC,iBAAO,MAsBxB,IAAMC,EAAqB,SAACC,GAC1BN,EAASM,GACTC,KAIIA,EAAa,WACjB,IAAMC,EAAa,WAAKT,EAAQ,IAAMU,OAAO,GACvCC,EAAO,UAAMC,KAAKC,MAAMb,EAAQ,KAItC,MAAM,GAAN,OAAUW,EAAV,cAAuBF,IAuCnBK,EAAc,WAClBC,cAAcX,EAASY,SACvBnB,GAAY,GACZE,GAAY,GACZE,EAAS,GACTE,EAAW,oBAGb,OACE,sBAAKc,UAAU,OAAf,UACE,sBAAKA,UAAU,iBAAf,UACGrB,EAAW,mBAAGqB,UAAS,mBACjB,mBAAGA,UAAS,wBAEnB,qBAAKA,UAAU,aAAf,SAEE,4BAAIT,WAGR,qBAAKS,UAAU,oBAAf,SACGrB,GAAUE,EAAWI,EAAU,oBAElC,sBAAKe,UAAU,MAAf,UACE,wBAAQA,UAAU,SAASC,QAAS,SAAAC,GAAC,OAAIb,EAAmB,OAAOc,SAAUxB,EAA7E,sBAIA,wBAAQqB,UAAU,SAASC,QAAS,SAAAC,GAAC,OAAIb,EAAmB,IAAIc,SAAUxB,EAA1E,yBAGA,wBAAQqB,UAAU,SAASC,QAAS,SAAAC,GAAC,OAAIb,EAAmB,MAAMc,SAAUxB,EAA5E,wBAGA,wBAAQqB,UAAU,SAASC,QAAS,SAAAC,GAAC,OAAIb,EAAmB,OAAOc,SAAUxB,EAA7E,yBAIF,sBAAKqB,UAAU,MAAf,UACE,wBAAQA,UAAU,eAAeC,QA1EnB,YAvBpB,SAAwBG,GACtB,IAAMC,EAAMC,KAAKD,MACXE,EAAa,IAAID,KAAKD,EAAkB,IAAZD,GAC5BI,EAAaD,EAAWE,WACxBC,EAAgBH,EAAWI,aACjCzB,EAAW,WAAD,OAAYsB,EAAZ,YAA0BE,EAAgB,GAAK,IAAM,IAArD,OAA0DA,IAoBpEE,CAAe7B,GACf,IAAI8B,EAAa9B,EACE,IAAf8B,IACFjC,GAAY,GACZE,GAAY,IAEdK,EAASY,QAAUe,aAAY,WAC7BD,IAAeA,EACf7B,GAAS,SAACD,GAAD,OAAWA,EAAQ,KACxB8B,GAAc,IAChBhB,IACAtB,EAAMwC,UAEP,MA2DwDZ,SAAUxB,EAAjE,eAGA,wBAAQqB,UAAU,eAAeC,QA1DnB,WAClBe,QAAQC,IAAI1C,GACZA,EAAMwC,OACNjB,cAAcX,EAASY,SACvBjB,GAAY,GACZF,GAAY,IAqDR,iBAGA,wBAAQoB,UAAU,eAAeC,QAASJ,EAA1C,0B,MCtHOqB,MAVf,WACI,OACI,mCACI,iCACI,uD,MCMDC,MAVf,WACI,OACI,mCACI,iCACI,iDCSDC,MAVf,WACE,OACE,sBAAKpB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCSqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCCdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.30912e6e.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport './../css/timer.css'\r\nimport './../css/main.css'\r\nconst alarm = new Audio('./../audio/alarm.mp3');\r\n\r\n\r\n\r\nconst Timer = () => {\r\n\r\n  const [isActive, setIsActive] = useState(false);\r\n  ///\r\n  const [isPaused, setIsPaused] = useState(false)\r\n  const [timer, setTimer] = useState(0)\r\n  const [endTime, setEndTime] = useState('')\r\n  const countRef = useRef(null)\r\n\r\n\r\n  function displayCurrentTime() {\r\n    const now = Date.now()\r\n    const currentTime = new Date(now)\r\n    const currentHour = currentTime.getHours()\r\n    const currentMinutes = currentTime.getMinutes()\r\n\r\n    console.log(currentHour)\r\n    console.log(currentMinutes)\r\n    console.log()\r\n  }\r\n\r\n  function displayEndTime(timestamp) {\r\n    const now = Date.now();\r\n    const finishTime = new Date(now + timestamp * 1000);\r\n    const finishHour = finishTime.getHours();\r\n    const finishMinutes = finishTime.getMinutes();\r\n    setEndTime(`Ends At ${finishHour}:${finishMinutes < 10 ? '0' : ''}${finishMinutes}`)\r\n  }\r\n\r\n  const setTimerStartValue = (timeValue) => {\r\n    setTimer(timeValue)\r\n    formatTime()\r\n  }\r\n\r\n\r\n  const formatTime = () => {\r\n    const getSeconds = `0${(timer % 60)}`.slice(-2)\r\n    const minutes = `${Math.floor(timer / 60)}`\r\n    // const getMinutes = `0${minutes % 60}`.slice(-2)\r\n    // const getHours = `0${Math.floor(timer / 3600)}`.slice(-2)\r\n\r\n    return `${minutes} : ${getSeconds}`\r\n  }\r\n\r\n  const handleStart = () => {\r\n\r\n    displayEndTime(timer)\r\n    let breakValue = timer\r\n    if (breakValue !== 0) {\r\n      setIsActive(true)\r\n      setIsPaused(false)\r\n    }\r\n    countRef.current = setInterval(() => {\r\n      breakValue = --breakValue\r\n      setTimer((timer) => timer - 1)\r\n      if (breakValue <= 0) {\r\n        handleReset()\r\n        alarm.play()\r\n      }\r\n    }, 1000)\r\n\r\n  }\r\n\r\n  const handlePause = () => {\r\n    console.log(alarm)\r\n    alarm.play()\r\n    clearInterval(countRef.current)\r\n    setIsPaused(true)\r\n    setIsActive(false)\r\n  }\r\n\r\n  const handleResume = () => {\r\n    setIsPaused(true)\r\n    countRef.current = setInterval(() => {\r\n\r\n      setTimer((timer) => timer + 1)\r\n\r\n    }, 1000)\r\n  }\r\n\r\n  const handleReset = () => {\r\n    clearInterval(countRef.current)\r\n    setIsActive(false)\r\n    setIsPaused(false)\r\n    setTimer(0)\r\n    setEndTime('Ready to begin!')\r\n  }\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"time-container\">\r\n        {isActive ? <p className={`time-animation`}>\r\n        </p> : <p className={`time-animation-stop`}></p>}\r\n\r\n        <div className=\"time-value\">\r\n          {/* {minutes}:{seconds} */}\r\n          <p>{formatTime()}</p>\r\n        </div>\r\n      </div>\r\n      <div className='display__end-time'>\r\n        {isActive||isPaused ? endTime : 'Ready to begin!'}\r\n      </div>\r\n      <div className=\"row\">\r\n        <button className=\"button\" onClick={e => setTimerStartValue(1500)} disabled={isActive}>\r\n          {/* {isActive ? 'Pause' : 'Start'} */}\r\n          pomodoro\r\n        </button>\r\n        <button className=\"button\" onClick={e => setTimerStartValue(5)} disabled={isActive}>\r\n          short break\r\n        </button>\r\n        <button className=\"button\" onClick={e => setTimerStartValue(900)} disabled={isActive}>\r\n          long break\r\n        </button>\r\n        <button className=\"button\" onClick={e => setTimerStartValue(2700)} disabled={isActive}>\r\n          extended\r\n        </button>\r\n      </div>\r\n      <div className=\"row\">\r\n        <button className=\"button start\" onClick={handleStart} disabled={isActive}>\r\n          >\r\n        </button>\r\n        <button className=\"button pause\" onClick={handlePause}>\r\n          | |\r\n        </button>\r\n        <button className=\"button reset\" onClick={handleReset}>\r\n          reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;","import './../css/footer.css'\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <>\r\n            <footer>\r\n                <p>Designed by brd-u</p>\r\n            </footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import './../css/header.css'\r\n\r\n\r\nfunction Header() {\r\n    return (\r\n        <>\r\n            <header>\r\n                <p>Focus Timer</p>\r\n            </header>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import './App.css';\nimport Timer from './app/components/Timer.js'\nimport Footer from './app/components/Footer.js'\nimport Header from './app/components/Header.js'\nimport { Route } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Timer/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter as Router  } from 'react-router-dom'\n\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}