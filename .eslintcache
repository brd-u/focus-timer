[{"C:\\Users\\micha\\Desktop\\GIT\\focus-timer\\src\\index.js":"1","C:\\Users\\micha\\Desktop\\GIT\\focus-timer\\src\\App.js":"2","C:\\Users\\micha\\Desktop\\GIT\\focus-timer\\src\\reportWebVitals.js":"3","C:\\Users\\micha\\Desktop\\GIT\\focus-timer\\src\\app\\components\\Timer.js":"4","C:\\Users\\micha\\Desktop\\GIT\\focus-timer\\src\\app\\components\\Header.js":"5","C:\\Users\\micha\\Desktop\\GIT\\focus-timer\\src\\app\\components\\Footer.js":"6"},{"size":538,"mtime":1612364155212,"results":"7","hashOfConfig":"8"},{"size":344,"mtime":1612364203861,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":3845,"mtime":1612364110034,"results":"11","hashOfConfig":"8"},{"size":210,"mtime":1612364110020,"results":"12","hashOfConfig":"8"},{"size":216,"mtime":1612364110017,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"xijaxs",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\micha\\Desktop\\GIT\\focus-timer\\src\\index.js",[],["29","30"],"C:\\Users\\micha\\Desktop\\GIT\\focus-timer\\src\\App.js",["31"],"import './App.css';\nimport Timer from './app/components/Timer.js'\nimport Footer from './app/components/Footer.js'\nimport Header from './app/components/Header.js'\nimport { Route } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Timer/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\micha\\Desktop\\GIT\\focus-timer\\src\\reportWebVitals.js",[],"C:\\Users\\micha\\Desktop\\GIT\\focus-timer\\src\\app\\components\\Timer.js",["32","33","34"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport './../css/timer.css'\r\nimport './../css/main.css'\r\nconst alarm = new Audio('./../audio/alarm.mp3');\r\n\r\n\r\n\r\nconst Timer = () => {\r\n\r\n  const [isActive, setIsActive] = useState(false);\r\n  ///\r\n  const [isPaused, setIsPaused] = useState(false)\r\n  const [timer, setTimer] = useState(0)\r\n  const [endTime, setEndTime] = useState('')\r\n  const countRef = useRef(null)\r\n\r\n\r\n  function displayCurrentTime() {\r\n    const now = Date.now()\r\n    const currentTime = new Date(now)\r\n    const currentHour = currentTime.getHours()\r\n    const currentMinutes = currentTime.getMinutes()\r\n\r\n    console.log(currentHour)\r\n    console.log(currentMinutes)\r\n    console.log()\r\n  }\r\n\r\n  function displayEndTime(timestamp) {\r\n    const now = Date.now();\r\n    const finishTime = new Date(now + timestamp * 1000);\r\n    const finishHour = finishTime.getHours();\r\n    const finishMinutes = finishTime.getMinutes();\r\n    setEndTime(`Ends At ${finishHour}:${finishMinutes < 10 ? '0' : ''}${finishMinutes}`)\r\n  }\r\n\r\n  const setTimerStartValue = (timeValue) => {\r\n    setTimer(timeValue)\r\n    formatTime()\r\n  }\r\n\r\n\r\n  const formatTime = () => {\r\n    const getSeconds = `0${(timer % 60)}`.slice(-2)\r\n    const minutes = `${Math.floor(timer / 60)}`\r\n    // const getMinutes = `0${minutes % 60}`.slice(-2)\r\n    // const getHours = `0${Math.floor(timer / 3600)}`.slice(-2)\r\n\r\n    return `${minutes} : ${getSeconds}`\r\n  }\r\n\r\n  const handleStart = () => {\r\n\r\n    displayEndTime(timer)\r\n    let breakValue = timer\r\n    if (breakValue !== 0) {\r\n      setIsActive(true)\r\n      setIsPaused(false)\r\n    }\r\n    countRef.current = setInterval(() => {\r\n      breakValue = --breakValue\r\n      setTimer((timer) => timer - 1)\r\n      if (breakValue <= 0) {\r\n        handleReset()\r\n        alarm.play()\r\n      }\r\n    }, 1000)\r\n\r\n  }\r\n\r\n  const handlePause = () => {\r\n    console.log(alarm)\r\n    alarm.play()\r\n    clearInterval(countRef.current)\r\n    setIsPaused(true)\r\n    setIsActive(false)\r\n  }\r\n\r\n  const handleResume = () => {\r\n    setIsPaused(true)\r\n    countRef.current = setInterval(() => {\r\n\r\n      setTimer((timer) => timer + 1)\r\n\r\n    }, 1000)\r\n  }\r\n\r\n  const handleReset = () => {\r\n    clearInterval(countRef.current)\r\n    setIsActive(false)\r\n    setIsPaused(false)\r\n    setTimer(0)\r\n    setEndTime('Ready to begin!')\r\n  }\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"time-container\">\r\n        {isActive ? <p className={`time-animation`}>\r\n        </p> : <p className={`time-animation-stop`}></p>}\r\n\r\n        <div className=\"time-value\">\r\n          {/* {minutes}:{seconds} */}\r\n          <p>{formatTime()}</p>\r\n        </div>\r\n      </div>\r\n      <div className='display__end-time'>\r\n        {isActive||isPaused ? endTime : 'Ready to begin!'}\r\n      </div>\r\n      <div className=\"row\">\r\n        <button className=\"button\" onClick={e => setTimerStartValue(1500)} disabled={isActive}>\r\n          {/* {isActive ? 'Pause' : 'Start'} */}\r\n          pomodoro\r\n        </button>\r\n        <button className=\"button\" onClick={e => setTimerStartValue(5)} disabled={isActive}>\r\n          short break\r\n        </button>\r\n        <button className=\"button\" onClick={e => setTimerStartValue(900)} disabled={isActive}>\r\n          long break\r\n        </button>\r\n        <button className=\"button\" onClick={e => setTimerStartValue(2700)} disabled={isActive}>\r\n          extended\r\n        </button>\r\n      </div>\r\n      <div className=\"row\">\r\n        <button className=\"button start\" onClick={handleStart} disabled={isActive}>\r\n          >\r\n        </button>\r\n        <button className=\"button pause\" onClick={handlePause}>\r\n          | |\r\n        </button>\r\n        <button className=\"button reset\" onClick={handleReset}>\r\n          reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;","C:\\Users\\micha\\Desktop\\GIT\\focus-timer\\src\\app\\components\\Header.js",[],"C:\\Users\\micha\\Desktop\\GIT\\focus-timer\\src\\app\\components\\Footer.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":5,"column":10,"nodeType":"41","messageId":"42","endLine":5,"endColumn":15},{"ruleId":"39","severity":1,"message":"43","line":1,"column":27,"nodeType":"41","messageId":"42","endLine":1,"endColumn":36},{"ruleId":"39","severity":1,"message":"44","line":18,"column":12,"nodeType":"41","messageId":"42","endLine":18,"endColumn":30},{"ruleId":"39","severity":1,"message":"45","line":79,"column":9,"nodeType":"41","messageId":"42","endLine":79,"endColumn":21},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'displayCurrentTime' is defined but never used.","'handleResume' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]